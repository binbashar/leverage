name: Release | PyPi Build Package and Push

on:
  release:
    types: [published]

jobs:
  build_push:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: |
          echo "[INFO] Installing Poetry..."
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.8.2 python -
          echo "[INFO] Configuring Poetry..."
          poetry config virtualenvs.create false  # This prevents poetry from creating a virtual environment

      - name: Install dependencies using Poetry
        run: |
          echo "[INFO] Installing dependencies..."
          export ENV POETRY_VIRTUALENVS_CREATE=false
          export PATH="${PATH}:${HOME}/.poetry/bin"
          poetry install --with=dev

      - name: bump_version
        run: |
          make bump-version-ci

      - name: clean
        run: |
          make clean

      - name: build
        run: |
          make build

      - name: check
        run:
          make check

      - name: upload
        run: |
          make push-ci
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: commit_push
        run: |
          git push

      - uses: act10ns/slack@v1
        if: always()
        with: 
          status: ${{ job.status }}
          channel: $SLACK_CI_CHANNEL
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CI_CHANNEL: ${{ secrets.SLACK_CI_CHANNEL }}
